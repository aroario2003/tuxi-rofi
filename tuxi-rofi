###########
#!/bin/sh 
###########

############################################                                          
#  _              _                  __ _  #
# | |_ _   ___  _(_)      _ __ ___  / _(_) #
# | __| | | \ \/ / |_____| '__/ _ \| |_| | #
# | |_| |_| |>  <| |_____| | | (_) |  _| | #
#  \__|\__,_/_/\_\_|     |_|  \___/|_| |_| #
#                                          # 
# By: Alejandro Rosario                    #
# Date: 4/8/21                             #
############################################                                        

######################################################################################################################
#tuxi-rofi is an extension of the tuxi script written by BugsWritter,                                                #
#all credit goes to him for writting that script.                                                                    #
#This script intends to be an extension of his script and make it easier for tuxi to be a part of everyones workflow.# 
######################################################################################################################

#####################
#                   #
#     variables     #
#                   #
#####################
DEST="/home/$USER"
TIMEOUT="60000"
BROWSER="brave"

####################
#                  #
#   colors help    #
#                  # 
####################
green="\033[1;32m"
yellow="\033[1;33m"
white="\033[0m"
blue="\033[1;36m"
red="\033[1;31m"

##########################
#                        #
#      colors rofi       #
#                        #
##########################
color1="#04152E"
color2="#ffffff"
color3="#04152E"
color4="#2E93A7"
color5="#ffffff"
color6="#04152E"
color7="#005fff"
color8="#00B2FE"

##########################
#                        #
#  Enviroment variables  #
#                        # 
##########################
[ -n "$TUXI_ROFI_BROWSER" ] && BROWSER="$TUXI_ROFI_BROWSER" 
[ -n "$TUXI_ROFI_TIMEOUT" ] && TIMEOUT="$TUXI_ROFI_TIMEOUT"
[ -n "$TUXI_ROFI_DESTINATION" ] && DEST="$TUXI_ROFI_DESTINATION" 

###################
#                 #
#  help message   #
#                 # 
###################
help_dialouge() {
    printf " %bUsage:%b %btuxi-rofi%b " "$yellow" "$green" 
        printf "%b[Option(s)]\n%b" "$blue"
	printf "%bOptions:%b\n" "$blue"
	printf "   %b-h%b              %bPrint this text%b\n" "$green" "$white"
	printf "   %b-u%b              %bPrint only the URL's for the given query%b\n" "$green" "$white"
	printf "   %b-n%b              %bPrint only the result found by tuxi, no links%b\n" "$green" "$white"
        printf "   %b-v%b              %bPrint output mainly to the terminal, this option is meant for debugging%b\n" "$green" "$white"
        printf "   %b-i%b              %bInstall tuxi on your system%b\n" "$green" "$white"
        printf "   %b-d%b              %bSet the destination for files result.txt, query.txt and history.txt to be put\n%b" "$green" "$white"
        printf "   %b-D%b              %bUse dmenu instead of rofi for link output\n%b" "$green" "$white"
        printf "   %b-a%b              %bUse dmenu and only give notification\n%b" "$green" "$white"
        printf "   %b-l%b              %bUse dmenu and only give the links related to the query\n%b" "$green" "$white"
        printf "   %b-t%b              %bSpecify the timeout for notifications\n%b" "$green" "$white"
        printf "   %b-b%b              %bSpecify the browser you would like to use for opening links\n%b" "$green" "$white"
      printf "%bLong flags available:\n%b" "$blue"
        printf " %b--help%b                     %bSame as -h\n%b" "$green" "$white"
        printf " %b--verbose%b                  %bSame as -v\n%b" "$green" "$white"
        printf " %b--install-tuxi%b             %bSame as -i\n%b" "$green" "$white"
        printf " %b--notification-only%b        %bSame as -n\n%b" "$green" "$white" 
        printf " %b--dmenu-links%b              %bSame as -l\n%b" "$green" "$white"
        printf " %b--use-dmenu%b                %bSame as -D\n%b" "$green" "$white"
        printf " %b--dmenu-notification%b       %bSame as -a\n%b" "$green" "$white"
      printf "%bEnvironment Variables:\n%b" "$blue"
        printf " %bTUXI_ROFI_BROWSER%b          %bSet the browser you would like tuxi-rofi to use\n%b" "$green" "$white"
        printf " %bTUXI_ROFI_TIMEOUT%b          %bSet the timeout of notifications\n%b" "$green" "$white"
        printf " %bTUXI_ROFI_DESTINATION%b      %bSet the destination for files created by tuxi-rofi\n%b" "$green" "$white"
        printf "%bCredit for Tuxi goes to BugsWritter at%b %bhttps://github.com/Bugswriter/tuxi\n%b" "$yellow" "$blue"

}

##################
#                #
#   print urls   #
#                #
##################
url_print() {

rofi -width 30 -dmenu -lines 0 -yoffset -450 -p "Search: " -font "Source Code Pro 11" -color-normal "$color1,$color2,$color3,$color4,$color5" -color-window "$color6,$color7,$color8" > $DEST/query.txt

tuxi -r -u $(cat $DEST/query.txt) > $DEST/result.txt

grep "http*" $DEST/result.txt | rofi -dmenu -p "Here are some links" -font "Source Code Pro 11" -color-normal "$color1,$color2,$color3,$color4,$color5" -color-window "$color6,$color7,$color8" | xargs -r $BROWSER
}

#######################
#                     # 
#  notification only  #
#                     # 
#######################
notif_only() {

rofi -width 30 -dmenu -lines 0 -yoffset -450 -p "search: " -font "source code pro 11" -color-normal "$color1,$color2,$color3,$color4,$color5" -color-window "$color6,$color7,$color8" > $DEST/query.txt

tuxi -r $(cat $DEST/query.txt) > $DEST/result.txt 

notify-send -t $TIMEOUT "$(cat $DEST/result.txt)"
}

####################
#                  #
#  verbose output  #
#                  #
####################
verbose() {

rofi -width 30 -dmenu -lines 0 -yoffset -450 -p "search: " -font "source code pro 11" -color-normal "$color1,$color2,$color3,$color4,$color5" -color-window "$color6,$color7,$color8" > $DEST/query.txt

echo "$(cat $DEST/query.txt)"

tuxi -r $(cat $DEST/query.txt) > $DEST/result.txt  

notify-send -t $TIMEOUT "$(cat $DEST/result.txt)"

if grep -q "Hi, I'm Tuxi" $DEST/result.txt; then 
       echo "no query given"
       exit 0
fi

if grep -q "No Result!" $DEST/result.txt; then
          echo "no results found"
          exit 0
fi
}

#########################
#                       #
#     install tuxi      #
#                       #
#########################
install_tuxi() {

cd 

git clone https://github.com/Bugswriter/tuxi.git

cd tuxi

sudo make install

echo "tuxi has been installed!"

exit 0

}

#########################
#                       #  
# Dmenu instead of rofi #
#                       #
#########################
use_dmenu() {

touch $DEST/empty.txt

cat $DEST/empty.txt | dmenu -p "Search" > $DEST/query.txt 

tuxi -r $(cat $DEST/query.txt) > $DEST/result.txt

if grep -q "Hi, I'm Tuxi" $DEST/result.txt; then 
	exit 0
fi

sleep 1

if grep -q "No Result!" $DEST/result.txt; then
   grep "http*" $DEST/result.txt | dmenu -p "No result, here are some links" -l 20 | xargs -r $BROWSER
else
notify-send -t $TIMEOUT "$(cat $DEST/result.txt)"
sleep 2
tuxi -r -u $(cat $DEST/query.txt) | grep "http*" | dmenu -p "Here are some links with more information" -l 20 | xargs -r $BROWSER
fi 
}

################################
#                              #
# dmenu with only notification #
#                              #
################################
dmenu_notif() {

touch $DEST/empty.txt

cat $DEST/empty.txt | dmenu -p "Search" > $DEST/query.txt 

tuxi -r $(cat $DEST/query.txt) > $DEST/result.txt

if grep -q "Hi, I'm Tuxi" $DEST/result.txt; then 
	exit 0
fi

if grep -q "No Result!" $DEST/result.txt; then
    notify-send "No result"
    exit 0  
fi


    notify-send -t $TIMEOUT "$(cat $DEST/result.txt)"

}

##########################
#                        # 
#    Dmenu only links    #
#                        #
##########################
dmenu_links() {

touch $DEST/empty.txt

cat $DEST/empty.txt | dmenu -p "Search" > $DEST/query.txt 

tuxi -r -u $(cat $DEST/query.txt) > $DEST/result.txt

grep "http*" $DEST/result.txt | dmenu -p "Here are the links" -l 20 | xargs -r $BROWSER

}

#######################
#                     #
#       Options       #
#                     #
#######################

  while getopts ":hunvid:Dalt:b:H-:" OPT; do
	case "$OPT" in 
       -)
         case ${OPTARG} in
           use-dmenu)
               use_dmenu
               exit 0
               ;;
           dmenu-notification)
               dmenu_notif
               exit 0
               ;;
           dmenu-links)
               dmenu_links  
               exit 0
               ;;
           help)
               help_dialouge
               exit 0
               ;;
           install-tuxi)
               install_tuxi
               exit 0
               ;;
           notification-only)
               notif_only
               exit 0
               ;;
           verbose)
               verbose
               exit 0
               ;;
         esac;;
        h) 
	   help_dialouge
	   exit 0
	   ;;
	u) 
           url_print
	   exit 0
	   ;;
	n)
	   notif_only
           exit 0
           ;;
        v) 
           verbose
           exit 0
           ;;
        i)
           install_tuxi
           exit 0
           ;;
        d)
           DEST=$OPTARG
           ;;
        D)
           use_dmenu
           exit 0
           ;;
        a)
           dmenu_notif
           exit 0
           ;;
        l)
           dmenu_links
           exit 0
           ;;
        t)
           TIMEOUT=$OPTARG
           ;;
        b)
           BROWSER=$OPTARG
           ;; 
        ?)
           printf "%binvalid option!\n%b" "$red" 
           exit 0
           ;;
      esac
done     
shift $((OPTIND-1))

#############################
#                           #
#       no flag code        #  
#                           #
#############################
rofi -width 30 -dmenu -lines 0 -yoffset -450 -p "search: " -font "source code pro 11" -color-normal "$color1,$color2,$color3,$color4,$color5" -color-window "$color6,$color7,$color8" > $DEST/query.txt

tuxi -r $(cat $DEST/query.txt) > $DEST/result.txt  

sleep 1

if grep -q "Hi, I'm Tuxi" $DEST/result.txt; then 
	exit 0
fi

if grep -q "No Result!" $DEST/result.txt; then
   grep "http*" $DEST/result.txt | rofi -dmenu -p "No result found, choose a link if you would like" -font "Source Code Pro 11" -color-normal "$color1,$color2,$color3,$color4,$color5" -color-window "$color6,$color7,$color8" | xargs -r $BROWSER
   exit 0
else
notify-send -t $TIMEOUT "$(cat $DEST/result.txt)"
sleep 2
tuxi -r -u $(cat $DEST/query.txt) | grep "http*" | rofi -dmenu -p "Here are some links with more information" -font "Source Code Pro 11" -color-normal "$color1,$color2,$color3,$color4,$color5" -color-window "$color6,$color7,$color8" | xargs -r $BROWSER
fi


 

